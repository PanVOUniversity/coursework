import React, { useState, useEffect } from 'react';
import { motion, useAnimation } from 'framer-motion';
import { useInView } from 'react-intersection-observer';
import { FaAward, FaUsers, FaHandshake, FaGlobe } from 'react-icons/fa';
import './About.css';

const About = () => {
  const [ref, inView] = useInView({
    threshold: 0.1,
    triggerOnce: true
  });

  const [counts, setCounts] = useState({
    deals: 0,
    years: 0,
    clients: 0,
    properties: 0
  });

  const controls = useAnimation();

  useEffect(() => {
    if (inView) {
      controls.start('visible');
      
      // Animate counters
      const targets = { deals: 500, years: 15, clients: 98, properties: 1000 };
      const duration = 2000;
      const steps = 60;
      const stepDuration = duration / steps;

      let step = 0;
      const timer = setInterval(() => {
        step++;
        const progress = step / steps;
        
        setCounts({
          deals: Math.floor(targets.deals * progress),
          years: Math.floor(targets.years * progress),
          clients: Math.floor(targets.clients * progress),
          properties: Math.floor(targets.properties * progress)
        });

        if (step >= steps) {
          clearInterval(timer);
          setCounts(targets);
        }
      }, stepDuration);
    }
  }, [inView, controls]);

  const stats = [
    {
      icon: FaHandshake,
      number: counts.deals,
      suffix: '+',
      label: '–£—Å–ø–µ—à–Ω—ã—Ö —Å–¥–µ–ª–æ–∫',
      color: '#2d5a27'
    },
    {
      icon: FaAward,
      number: counts.years,
      suffix: '',
      label: '–õ–µ—Ç –æ–ø—ã—Ç–∞',
      color: '#4a7c59'
    },
    {
      icon: FaUsers,
      number: counts.clients,
      suffix: '%',
      label: '–î–æ–≤–æ–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤',
      color: '#6b8e6b'
    },
    {
      icon: FaGlobe,
      number: counts.properties,
      suffix: '+',
      label: '–û–±—ä–µ–∫—Ç–æ–≤ –≤ –ø–æ—Ä—Ç—Ñ–µ–ª–µ',
      color: '#a8d5a8'
    }
  ];

  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.2,
        delayChildren: 0.1
      }
    }
  };

  const itemVariants = {
    hidden: { y: 50, opacity: 0 },
    visible: {
      y: 0,
      opacity: 1,
      transition: {
        duration: 0.6,
        ease: "easeOut"
      }
    }
  };

  return (
    <section id="about" className="about">
      <div className="container">
        <motion.div
          className="about-content"
          ref={ref}
          variants={containerVariants}
          initial="hidden"
          animate={controls}
        >
          <motion.div className="about-text" variants={itemVariants}>
            <div className="about-badge">
              <span>üèÜ –û –∫–æ–º–ø–∞–Ω–∏–∏</span>
            </div>
            
            <h2 className="about-title">
              <span className="gradient-text">Dubai Elite Properties</span>
              <br />
              –í–∞—à –Ω–∞–¥–µ–∂–Ω—ã–π –ø–∞—Ä—Ç–Ω–µ—Ä –≤ –º–∏—Ä–µ –ø—Ä–µ–º–∏–∞–ª—å–Ω–æ–π –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏
            </h2>
            
            <div className="about-description">
              <p>
                –ú—ã - –≤–µ–¥—É—â–µ–µ –∞–≥–µ–Ω—Ç—Å—Ç–≤–æ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –≤ –î—É–±–∞–µ —Å –±–æ–ª–µ–µ —á–µ–º 15-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º —Ä–∞–±–æ—Ç—ã –Ω–∞ —Ä—ã–Ω–∫–µ. 
                –ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –Ω–∞–π—Ç–∏ –∏–¥–µ–∞–ª—å–Ω—É—é –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å –∏–ª–∏ –≤—ã–≥–æ–¥–Ω–æ –ø—Ä–æ–¥–∞—Ç—å –∏–º–µ—é—â—É—é—Å—è.
              </p>
              <p>
                –ú—ã —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º—Å—è –Ω–∞ –ø—Ä–µ–º–∏–∞–ª—å–Ω–æ–º —Å–µ–≥–º–µ–Ω—Ç–µ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –∏ —Ä–∞–±–æ—Ç–∞–µ–º —Å —Å–∞–º—ã–º–∏ —Ç—Ä–µ–±–æ–≤–∞—Ç–µ–ª—å–Ω—ã–º–∏ –∫–ª–∏–µ–Ω—Ç–∞–º–∏. 
                –ù–∞—à–∞ —Ä–µ–ø—É—Ç–∞—Ü–∏—è –æ—Å–Ω–æ–≤–∞–Ω–∞ –Ω–∞ —á–µ—Å—Ç–Ω–æ—Å—Ç–∏, –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∏–∑–º–µ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏–≤–Ω–æ—Å—Ç–∏.
              </p>
            </div>

            <div className="about-features">
              <div className="feature-item">
                <div className="feature-icon">
                  <FaAward />
                </div>
                <div className="feature-content">
                  <h4>–ü—Ä–µ–º–∏–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ</h4>
                  <p>–†–∞–±–æ—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ —Å –ª—É—á—à–∏–º–∏ –æ–±—ä–µ–∫—Ç–∞–º–∏ –∫–ª–∞—Å—Å–∞ –ª—é–∫—Å</p>
                </div>
              </div>
              
              <div className="feature-item">
                <div className="feature-icon">
                  <FaHandshake />
                </div>
                <div className="feature-content">
                  <h4>–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥</h4>
                  <p>–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ —Å –∫–∞–∂–¥—ã–º –∫–ª–∏–µ–Ω—Ç–æ–º</p>
                </div>
              </div>
              
              <div className="feature-item">
                <div className="feature-icon">
                  <FaGlobe />
                </div>
                <div className="feature-content">
                  <h4>–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π –æ–ø—ã—Ç</h4>
                  <p>–û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å–æ –≤—Å–µ–≥–æ –º–∏—Ä–∞</p>
                </div>
              </div>
            </div>
          </motion.div>

          <motion.div className="about-visual" variants={itemVariants}>
            <div className="about-image-container">
              <img
                src="https://images.unsplash.com/photo-1560472354-b33ff0c44a43?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80"
                alt="Dubai Office"
                className="about-image"
              />
              <div className="image-overlay" />
            </div>

            <div className="stats-container">
              {stats.map((stat, index) => (
                <motion.div
                  key={index}
                  className="stat-card"
                  style={{ backgroundColor: stat.color }}
                  whileHover={{ scale: 1.05 }}
                  initial={{ opacity: 0, scale: 0.8 }}
                  animate={{ opacity: 1, scale: 1 }}
                  transition={{ delay: index * 0.1 }}
                >
                  <div className="stat-icon">
                    <stat.icon />
                  </div>
                  <div className="stat-number">
                    {stat.number}{stat.suffix}
                  </div>
                  <div className="stat-label">{stat.label}</div>
                </motion.div>
              ))}
            </div>
          </motion.div>
        </motion.div>
      </div>
    </section>
  );
};

export default About;
